{"ast":null,"code":"var _jsxFileName = \"/Users/nihith/HRMS/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [backendStatus, setBackendStatus] = useState('Loading...');\n  const [databaseStatus, setDatabaseStatus] = useState('Loading...');\n  const [testData, setTestData] = useState(null);\n  const [healthData, setHealthData] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [showLogin, setShowLogin] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (token && savedUser) {\n      setUser(JSON.parse(savedUser));\n      setIsAuthenticated(true);\n    }\n\n    // Test backend connection\n    fetch('/api/test').then(response => response.json()).then(data => {\n      setTestData(data);\n      setBackendStatus('Connected ✅');\n    }).catch(error => {\n      console.error('Backend connection failed:', error);\n      setBackendStatus('Failed ❌');\n    });\n\n    // Test health endpoint (includes database status)\n    fetch('/api/health').then(response => response.json()).then(data => {\n      setHealthData(data);\n      setDatabaseStatus(data.database === 'connected' ? 'Connected ✅' : 'Disconnected ❌');\n    }).catch(error => {\n      console.error('Health check failed:', error);\n      setDatabaseStatus('Failed ❌');\n    });\n  }, []);\n  const handleLogin = (userData, token) => {\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n  const handleRegister = (userData, token) => {\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Show authentication forms if not authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: showLogin ? /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin,\n        onSwitchToRegister: () => setShowLogin(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        onRegister: handleRegister,\n        onSwitchToLogin: () => setShowLogin(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show dashboard if authenticated\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Dashboard, {\n      user: user,\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"e0gMoyTpXL2rfivch3lCQZ+J3CU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Login","Register","Dashboard","jsxDEV","_jsxDEV","App","_s","backendStatus","setBackendStatus","databaseStatus","setDatabaseStatus","testData","setTestData","healthData","setHealthData","isAuthenticated","setIsAuthenticated","user","setUser","showLogin","setShowLogin","token","localStorage","getItem","savedUser","JSON","parse","fetch","then","response","json","data","catch","error","console","database","handleLogin","userData","handleRegister","handleLogout","removeItem","className","children","onLogin","onSwitchToRegister","fileName","_jsxFileName","lineNumber","columnNumber","onRegister","onSwitchToLogin","onLogout","_c","$RefreshReg$"],"sources":["/Users/nihith/HRMS/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  const [backendStatus, setBackendStatus] = useState('Loading...');\n  const [databaseStatus, setDatabaseStatus] = useState('Loading...');\n  const [testData, setTestData] = useState(null);\n  const [healthData, setHealthData] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [showLogin, setShowLogin] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    \n    if (token && savedUser) {\n      setUser(JSON.parse(savedUser));\n      setIsAuthenticated(true);\n    }\n\n    // Test backend connection\n    fetch('/api/test')\n      .then(response => response.json())\n      .then(data => {\n        setTestData(data);\n        setBackendStatus('Connected ✅');\n      })\n      .catch(error => {\n        console.error('Backend connection failed:', error);\n        setBackendStatus('Failed ❌');\n      });\n\n    // Test health endpoint (includes database status)\n    fetch('/api/health')\n      .then(response => response.json())\n      .then(data => {\n        setHealthData(data);\n        setDatabaseStatus(data.database === 'connected' ? 'Connected ✅' : 'Disconnected ❌');\n      })\n      .catch(error => {\n        console.error('Health check failed:', error);\n        setDatabaseStatus('Failed ❌');\n      });\n  }, []);\n\n  const handleLogin = (userData, token) => {\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n\n  const handleRegister = (userData, token) => {\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Show authentication forms if not authenticated\n  if (!isAuthenticated) {\n    return (\n      <div className=\"App\">\n        {showLogin ? (\n          <Login \n            onLogin={handleLogin} \n            onSwitchToRegister={() => setShowLogin(false)} \n          />\n        ) : (\n          <Register \n            onRegister={handleRegister} \n            onSwitchToLogin={() => setShowLogin(true)} \n          />\n        )}\n      </div>\n    );\n  }\n\n  // Show dashboard if authenticated\n  return (\n    <div className=\"App\">\n      <Dashboard user={user} onLogout={handleLogout} />\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}