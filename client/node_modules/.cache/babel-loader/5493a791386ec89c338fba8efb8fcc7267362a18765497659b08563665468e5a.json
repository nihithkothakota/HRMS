{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import Login from'./components/Login';import Register from'./components/Register';import Dashboard from'./components/Dashboard';import{jsx as _jsx}from\"react/jsx-runtime\";function App(){const[backendStatus,setBackendStatus]=useState('Loading...');const[databaseStatus,setDatabaseStatus]=useState('Loading...');const[testData,setTestData]=useState(null);const[healthData,setHealthData]=useState(null);const[isAuthenticated,setIsAuthenticated]=useState(false);const[user,setUser]=useState(null);const[token,setToken]=useState(null);const[showLogin,setShowLogin]=useState(true);useEffect(()=>{// Check if user is already logged in\nconst savedToken=localStorage.getItem('token');const savedUser=localStorage.getItem('user');if(savedToken&&savedUser){// Validate token by making a test API call\nfetch('/api/auth/validate',{headers:{'Authorization':`Bearer ${savedToken}`}}).then(response=>{if(response.ok){const userData=JSON.parse(savedUser);setUser(userData);setToken(savedToken);setIsAuthenticated(true);}else{// Token is invalid, clear storage\nlocalStorage.removeItem('token');localStorage.removeItem('user');setIsAuthenticated(false);}}).catch(error=>{console.error('Token validation failed:',error);localStorage.removeItem('token');localStorage.removeItem('user');setIsAuthenticated(false);});}// Test backend connection\nfetch('/api/test').then(response=>response.json()).then(data=>{setTestData(data);setBackendStatus('Connected ✅');}).catch(error=>{console.error('Backend connection failed:',error);setBackendStatus('Failed ❌');});// Test health endpoint (includes database status)\nfetch('/api/health').then(response=>response.json()).then(data=>{setHealthData(data);setDatabaseStatus(data.database==='connected'?'Connected ✅':'Disconnected ❌');}).catch(error=>{console.error('Health check failed:',error);setDatabaseStatus('Failed ❌');});},[]);const handleLogin=(userData,userToken)=>{setUser(userData);setToken(userToken);setIsAuthenticated(true);};const handleRegister=(userData,userToken)=>{setUser(userData);setToken(userToken);setIsAuthenticated(true);};const handleLogout=()=>{localStorage.removeItem('token');localStorage.removeItem('user');setUser(null);setToken(null);setIsAuthenticated(false);};// Global API response handler for 401 errors\nuseEffect(()=>{const originalFetch=window.fetch;window.fetch=function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return originalFetch.apply(this,args).then(response=>{if(response.status===401&&isAuthenticated){// Token expired or invalid, logout user\nhandleLogout();}return response;});};return()=>{window.fetch=originalFetch;};},[isAuthenticated]);// Show authentication forms if not authenticated\nif(!isAuthenticated){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:showLogin?/*#__PURE__*/_jsx(Login,{onLogin:handleLogin,onSwitchToRegister:()=>setShowLogin(false)}):/*#__PURE__*/_jsx(Register,{onRegister:handleRegister,onSwitchToLogin:()=>setShowLogin(true)})});}// Show dashboard if authenticated\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(Dashboard,{user:user,onLogout:handleLogout,token:token})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Login","Register","Dashboard","jsx","_jsx","App","backendStatus","setBackendStatus","databaseStatus","setDatabaseStatus","testData","setTestData","healthData","setHealthData","isAuthenticated","setIsAuthenticated","user","setUser","token","setToken","showLogin","setShowLogin","savedToken","localStorage","getItem","savedUser","fetch","headers","then","response","ok","userData","JSON","parse","removeItem","catch","error","console","json","data","database","handleLogin","userToken","handleRegister","handleLogout","originalFetch","window","_len","arguments","length","args","Array","_key","apply","status","className","children","onLogin","onSwitchToRegister","onRegister","onSwitchToLogin","onLogout"],"sources":["/Users/nihith/HRMS/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Dashboard from './components/Dashboard';\n\nfunction App() {\n  const [backendStatus, setBackendStatus] = useState('Loading...');\n  const [databaseStatus, setDatabaseStatus] = useState('Loading...');\n  const [testData, setTestData] = useState(null);\n  const [healthData, setHealthData] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [showLogin, setShowLogin] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const savedToken = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    \n    if (savedToken && savedUser) {\n      // Validate token by making a test API call\n      fetch('/api/auth/validate', {\n        headers: {\n          'Authorization': `Bearer ${savedToken}`\n        }\n      })\n      .then(response => {\n        if (response.ok) {\n          const userData = JSON.parse(savedUser);\n          setUser(userData);\n          setToken(savedToken);\n          setIsAuthenticated(true);\n        } else {\n          // Token is invalid, clear storage\n          localStorage.removeItem('token');\n          localStorage.removeItem('user');\n          setIsAuthenticated(false);\n        }\n      })\n      .catch(error => {\n        console.error('Token validation failed:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        setIsAuthenticated(false);\n      });\n    }\n\n    // Test backend connection\n    fetch('/api/test')\n      .then(response => response.json())\n      .then(data => {\n        setTestData(data);\n        setBackendStatus('Connected ✅');\n      })\n      .catch(error => {\n        console.error('Backend connection failed:', error);\n        setBackendStatus('Failed ❌');\n      });\n\n    // Test health endpoint (includes database status)\n    fetch('/api/health')\n      .then(response => response.json())\n      .then(data => {\n        setHealthData(data);\n        setDatabaseStatus(data.database === 'connected' ? 'Connected ✅' : 'Disconnected ❌');\n      })\n      .catch(error => {\n        console.error('Health check failed:', error);\n        setDatabaseStatus('Failed ❌');\n      });\n  }, []);\n\n  const handleLogin = (userData, userToken) => {\n    setUser(userData);\n    setToken(userToken);\n    setIsAuthenticated(true);\n  };\n\n  const handleRegister = (userData, userToken) => {\n    setUser(userData);\n    setToken(userToken);\n    setIsAuthenticated(true);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setToken(null);\n    setIsAuthenticated(false);\n  };\n\n  // Global API response handler for 401 errors\n  useEffect(() => {\n    const originalFetch = window.fetch;\n    window.fetch = function(...args) {\n      return originalFetch.apply(this, args).then(response => {\n        if (response.status === 401 && isAuthenticated) {\n          // Token expired or invalid, logout user\n          handleLogout();\n        }\n        return response;\n      });\n    };\n\n    return () => {\n      window.fetch = originalFetch;\n    };\n  }, [isAuthenticated]);\n\n  // Show authentication forms if not authenticated\n  if (!isAuthenticated) {\n    return (\n      <div className=\"App\">\n        {showLogin ? (\n          <Login \n            onLogin={handleLogin} \n            onSwitchToRegister={() => setShowLogin(false)} \n          />\n        ) : (\n          <Register \n            onRegister={handleRegister} \n            onSwitchToLogin={() => setShowLogin(true)} \n          />\n        )}\n      </div>\n    );\n  }\n\n  // Show dashboard if authenticated\n  return (\n    <div className=\"App\">\n      <Dashboard user={user} onLogout={handleLogout} token={token} />\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}