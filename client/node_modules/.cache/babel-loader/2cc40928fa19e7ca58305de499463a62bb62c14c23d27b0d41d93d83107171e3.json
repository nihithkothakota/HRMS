{"ast":null,"code":"var _jsxFileName = \"/Users/nihith/HRMS/client/src/components/EmployeeManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './EmployeeManagement.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeManagement = ({\n  user,\n  token\n}) => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showAdminForm, setShowAdminForm] = useState(false);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    department_id: '',\n    position: '',\n    salary: '',\n    phone: ''\n  });\n  const [adminFormData, setAdminFormData] = useState({\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    department_id: '',\n    position: '',\n    salary: '',\n    phone: ''\n  });\n\n  // Helper function to handle API responses\n  const handleApiResponse = async response => {\n    if (response.status === 401) {\n      // Token is invalid, redirect to login\n      window.location.reload();\n      return null;\n    }\n    return response.json();\n  };\n  useEffect(() => {\n    fetchEmployees();\n    fetchDepartments();\n  }, []);\n  const fetchEmployees = async () => {\n    try {\n      const response = await fetch('/api/employees', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const result = await handleApiResponse(response);\n      if (result && result.success) {\n        setEmployees(result.data);\n      }\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchDepartments = async () => {\n    try {\n      const response = await fetch('/api/employees/departments/list', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const result = await handleApiResponse(response);\n      if (result && result.success) {\n        setDepartments(result.data);\n      }\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const url = editingEmployee ? `/api/employees/${editingEmployee.id}` : '/api/employees';\n      const method = editingEmployee ? 'PUT' : 'POST';\n      const body = editingEmployee ? {\n        ...formData,\n        password: undefined\n      } // Don't send password on update\n      : formData;\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      const result = await handleApiResponse(response);\n      if (result && result.success) {\n        setShowAddForm(false);\n        setEditingEmployee(null);\n        setFormData({\n          email: '',\n          password: '',\n          first_name: '',\n          last_name: '',\n          department_id: '',\n          position: '',\n          salary: '',\n          phone: ''\n        });\n        fetchEmployees();\n      } else {\n        alert(result.message || 'Failed to save employee');\n      }\n    } catch (error) {\n      console.error('Error saving employee:', error);\n      alert('Failed to save employee');\n    }\n  };\n  const handleAdminSubmit = async e => {\n    e.preventDefault();\n\n    // Validate admin password strength\n    if (adminFormData.password.length < 8) {\n      alert('Admin passwords must be at least 8 characters long');\n      return;\n    }\n    try {\n      const response = await fetch('/api/employees/admin', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(adminFormData)\n      });\n      const result = await handleApiResponse(response);\n      if (result && result.success) {\n        setShowAdminForm(false);\n        setAdminFormData({\n          email: '',\n          password: '',\n          first_name: '',\n          last_name: '',\n          department_id: '',\n          position: '',\n          salary: '',\n          phone: ''\n        });\n        fetchEmployees();\n        alert('Admin account created successfully');\n      } else {\n        alert(result.message || 'Failed to create admin account');\n      }\n    } catch (error) {\n      console.error('Error creating admin:', error);\n      alert('Failed to create admin account');\n    }\n  };\n  const handleEdit = employee => {\n    setEditingEmployee(employee);\n    setFormData({\n      email: employee.email,\n      password: '',\n      first_name: employee.first_name,\n      last_name: employee.last_name,\n      department_id: employee.department_id || '',\n      position: employee.position || '',\n      salary: employee.salary || '',\n      phone: employee.phone || ''\n    });\n    setShowAddForm(true);\n  };\n  const handleDelete = async employeeId => {\n    if (!window.confirm('Are you sure you want to delete this employee?')) {\n      return;\n    }\n    try {\n      const response = await fetch(`/api/employees/${employeeId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const result = await handleApiResponse(response);\n      if (result && result.success) {\n        fetchEmployees();\n      } else {\n        alert(result.message || 'Failed to delete employee');\n      }\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n      alert('Failed to delete employee');\n    }\n  };\n  const cancelForm = () => {\n    setShowAddForm(false);\n    setEditingEmployee(null);\n    setFormData({\n      email: '',\n      password: '',\n      first_name: '',\n      last_name: '',\n      department_id: '',\n      position: '',\n      salary: '',\n      phone: ''\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading employees...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Employee Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: () => setShowAddForm(true),\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: editingEmployee ? 'Edit Employee' : 'Add New Employee'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.first_name,\n              onChange: e => setFormData({\n                ...formData,\n                first_name: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.last_name,\n              onChange: e => setFormData({\n                ...formData,\n                last_name: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              value: formData.email,\n              onChange: e => setFormData({\n                ...formData,\n                email: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), !editingEmployee && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: formData.password,\n              onChange: e => setFormData({\n                ...formData,\n                password: e.target.value\n              }),\n              required: !editingEmployee\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: formData.department_id,\n              onChange: e => setFormData({\n                ...formData,\n                department_id: e.target.value\n              }),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 19\n              }, this), departments.map(dept => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: dept.id,\n                children: dept.name\n              }, dept.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: formData.position,\n              onChange: e => setFormData({\n                ...formData,\n                position: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: formData.salary,\n              onChange: e => setFormData({\n                ...formData,\n                salary: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"tel\",\n              value: formData.phone,\n              onChange: e => setFormData({\n                ...formData,\n                phone: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: editingEmployee ? 'Update Employee' : 'Add Employee'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: cancelForm,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employees-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"All Employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), employees.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No employees found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employees-grid\",\n        children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"employee-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employee-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [employee.first_name, \" \", employee.last_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"employee-role\",\n              children: employee.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employee-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 22\n              }, this), \" \", employee.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Position:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 22\n              }, this), \" \", employee.position]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Department:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 22\n              }, this), \" \", employee.department_name || 'Not assigned']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Salary:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 22\n              }, this), \" \\u20B9\", parseFloat(employee.salary || 0).toLocaleString('en-IN')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Hire Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 22\n              }, this), \" \", new Date(employee.hire_date).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this), employee.phone && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Phone:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 41\n              }, this), \" \", employee.phone]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employee-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => handleEdit(employee),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-danger\",\n              onClick: () => handleDelete(employee.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeManagement, \"iQCO7X1IykfuPsEXnugA/+kIWuI=\");\n_c = EmployeeManagement;\nexport default EmployeeManagement;\nvar _c;\n$RefreshReg$(_c, \"EmployeeManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EmployeeManagement","user","token","_s","employees","setEmployees","departments","setDepartments","loading","setLoading","showAddForm","setShowAddForm","showAdminForm","setShowAdminForm","editingEmployee","setEditingEmployee","formData","setFormData","email","password","first_name","last_name","department_id","position","salary","phone","adminFormData","setAdminFormData","handleApiResponse","response","status","window","location","reload","json","fetchEmployees","fetchDepartments","fetch","headers","result","success","data","error","console","handleSubmit","e","preventDefault","url","id","method","body","undefined","JSON","stringify","alert","message","handleAdminSubmit","length","handleEdit","employee","handleDelete","employeeId","confirm","cancelForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","target","required","map","dept","name","role","department_name","parseFloat","toLocaleString","Date","hire_date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/nihith/HRMS/client/src/components/EmployeeManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './EmployeeManagement.css';\n\nconst EmployeeManagement = ({ user, token }) => {\n  const [employees, setEmployees] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [showAdminForm, setShowAdminForm] = useState(false);\n  const [editingEmployee, setEditingEmployee] = useState(null);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    department_id: '',\n    position: '',\n    salary: '',\n    phone: ''\n  });\n  const [adminFormData, setAdminFormData] = useState({\n    email: '',\n    password: '',\n    first_name: '',\n    last_name: '',\n    department_id: '',\n    position: '',\n    salary: '',\n    phone: ''\n  });\n\n  // Helper function to handle API responses\n  const handleApiResponse = async (response) => {\n    if (response.status === 401) {\n      // Token is invalid, redirect to login\n      window.location.reload();\n      return null;\n    }\n    return response.json();\n  };\n\n  useEffect(() => {\n    fetchEmployees();\n    fetchDepartments();\n  }, []);\n\n  const fetchEmployees = async () => {\n    try {\n      const response = await fetch('/api/employees', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const result = await handleApiResponse(response);\n      if (result && result.success) {\n        setEmployees(result.data);\n      }\n    } catch (error) {\n      console.error('Error fetching employees:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchDepartments = async () => {\n    try {\n      const response = await fetch('/api/employees/departments/list', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      const result = await handleApiResponse(response);\n      if (result && result.success) {\n        setDepartments(result.data);\n      }\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const url = editingEmployee \n        ? `/api/employees/${editingEmployee.id}`\n        : '/api/employees';\n      \n      const method = editingEmployee ? 'PUT' : 'POST';\n      const body = editingEmployee \n        ? { ...formData, password: undefined } // Don't send password on update\n        : formData;\n\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      \n      const result = await handleApiResponse(response);\n      if (result && result.success) {\n        setShowAddForm(false);\n        setEditingEmployee(null);\n        setFormData({\n          email: '',\n          password: '',\n          first_name: '',\n          last_name: '',\n          department_id: '',\n          position: '',\n          salary: '',\n          phone: ''\n        });\n        fetchEmployees();\n      } else {\n        alert(result.message || 'Failed to save employee');\n      }\n    } catch (error) {\n      console.error('Error saving employee:', error);\n      alert('Failed to save employee');\n    }\n  };\n\n  const handleAdminSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate admin password strength\n    if (adminFormData.password.length < 8) {\n      alert('Admin passwords must be at least 8 characters long');\n      return;\n    }\n\n    try {\n      const response = await fetch('/api/employees/admin', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(adminFormData)\n      });\n      \n      const result = await handleApiResponse(response);\n      if (result && result.success) {\n        setShowAdminForm(false);\n        setAdminFormData({\n          email: '',\n          password: '',\n          first_name: '',\n          last_name: '',\n          department_id: '',\n          position: '',\n          salary: '',\n          phone: ''\n        });\n        fetchEmployees();\n        alert('Admin account created successfully');\n      } else {\n        alert(result.message || 'Failed to create admin account');\n      }\n    } catch (error) {\n      console.error('Error creating admin:', error);\n      alert('Failed to create admin account');\n    }\n  };\n\n  const handleEdit = (employee) => {\n    setEditingEmployee(employee);\n    setFormData({\n      email: employee.email,\n      password: '',\n      first_name: employee.first_name,\n      last_name: employee.last_name,\n      department_id: employee.department_id || '',\n      position: employee.position || '',\n      salary: employee.salary || '',\n      phone: employee.phone || ''\n    });\n    setShowAddForm(true);\n  };\n\n  const handleDelete = async (employeeId) => {\n    if (!window.confirm('Are you sure you want to delete this employee?')) {\n      return;\n    }\n\n    try {\n      const response = await fetch(`/api/employees/${employeeId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      const result = await handleApiResponse(response);\n      if (result && result.success) {\n        fetchEmployees();\n      } else {\n        alert(result.message || 'Failed to delete employee');\n      }\n    } catch (error) {\n      console.error('Error deleting employee:', error);\n      alert('Failed to delete employee');\n    }\n  };\n\n  const cancelForm = () => {\n    setShowAddForm(false);\n    setEditingEmployee(null);\n    setFormData({\n      email: '',\n      password: '',\n      first_name: '',\n      last_name: '',\n      department_id: '',\n      position: '',\n      salary: '',\n      phone: ''\n    });\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading employees...</div>;\n  }\n\n  return (\n    <div className=\"employee-management\">\n      <div className=\"employee-header\">\n        <h2>Employee Management</h2>\n        <button \n          className=\"btn btn-primary\"\n          onClick={() => setShowAddForm(true)}\n        >\n          Add Employee\n        </button>\n      </div>\n\n      {showAddForm && (\n        <div className=\"employee-form\">\n          <h3>{editingEmployee ? 'Edit Employee' : 'Add New Employee'}</h3>\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>First Name</label>\n                <input\n                  type=\"text\"\n                  value={formData.first_name}\n                  onChange={(e) => setFormData({...formData, first_name: e.target.value})}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Last Name</label>\n                <input\n                  type=\"text\"\n                  value={formData.last_name}\n                  onChange={(e) => setFormData({...formData, last_name: e.target.value})}\n                  required\n                />\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>Email</label>\n                <input\n                  type=\"email\"\n                  value={formData.email}\n                  onChange={(e) => setFormData({...formData, email: e.target.value})}\n                  required\n                />\n              </div>\n              {!editingEmployee && (\n                <div className=\"form-group\">\n                  <label>Password</label>\n                  <input\n                    type=\"password\"\n                    value={formData.password}\n                    onChange={(e) => setFormData({...formData, password: e.target.value})}\n                    required={!editingEmployee}\n                  />\n                </div>\n              )}\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>Department</label>\n                <select\n                  value={formData.department_id}\n                  onChange={(e) => setFormData({...formData, department_id: e.target.value})}\n                  required\n                >\n                  <option value=\"\">Select department</option>\n                  {departments.map(dept => (\n                    <option key={dept.id} value={dept.id}>{dept.name}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <label>Position</label>\n                <input\n                  type=\"text\"\n                  value={formData.position}\n                  onChange={(e) => setFormData({...formData, position: e.target.value})}\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>Salary</label>\n                <input\n                  type=\"number\"\n                  value={formData.salary}\n                  onChange={(e) => setFormData({...formData, salary: e.target.value})}\n                  required\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Phone</label>\n                <input\n                  type=\"tel\"\n                  value={formData.phone}\n                  onChange={(e) => setFormData({...formData, phone: e.target.value})}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"btn btn-primary\">\n                {editingEmployee ? 'Update Employee' : 'Add Employee'}\n              </button>\n              <button \n                type=\"button\" \n                className=\"btn btn-secondary\"\n                onClick={cancelForm}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n\n      <div className=\"employees-list\">\n        <h3>All Employees</h3>\n        {employees.length === 0 ? (\n          <p>No employees found</p>\n        ) : (\n          <div className=\"employees-grid\">\n            {employees.map(employee => (\n              <div key={employee.id} className=\"employee-card\">\n                <div className=\"employee-header\">\n                  <h4>{employee.first_name} {employee.last_name}</h4>\n                  <span className=\"employee-role\">{employee.role}</span>\n                </div>\n                <div className=\"employee-details\">\n                  <p><strong>Email:</strong> {employee.email}</p>\n                  <p><strong>Position:</strong> {employee.position}</p>\n                  <p><strong>Department:</strong> {employee.department_name || 'Not assigned'}</p>\n                  <p><strong>Salary:</strong> ₹{parseFloat(employee.salary || 0).toLocaleString('en-IN')}</p>\n                  <p><strong>Hire Date:</strong> {new Date(employee.hire_date).toLocaleDateString()}</p>\n                  {employee.phone && <p><strong>Phone:</strong> {employee.phone}</p>}\n                </div>\n                <div className=\"employee-actions\">\n                  <button \n                    className=\"btn btn-secondary\"\n                    onClick={() => handleEdit(employee)}\n                  >\n                    Edit\n                  </button>\n                  <button \n                    className=\"btn btn-danger\"\n                    onClick={() => handleDelete(employee.id)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeManagement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}